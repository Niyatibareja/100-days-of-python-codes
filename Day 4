# 100-days-of-python-codes
#Happy Learning ! 
#day 4 
# Loops In Python
In Python, loops are used to execute a block of code repeatedly
There are two main types of loops in Python:
1. 'For' loops
2. 'While' loops
3. Loops Controls Statement

~Loops in Python are used to execute a block of code repeatedly.
~They are essential for automating repetitive tasks, processing collections of data (e.g., lists or strings), and iterating through sequences or until a specific condition is met.
~for loops are commonly used for iteration, while while loops are used when you need to repeat code based on a condition.
~Loop control statements like break and continue provide flexibility in managing loop execution.

# 1. For loops
A 'for loop' is used to iterate over a sequence (such as a list, tuple, string, or range) and execute a block of code for each item in the sequence.

# if we have to print 1 to 5 number then we use for loop

for i in range(1,6):   
    print(i)

for i in range(2,21,2): # print 1 to 20 with the difference of 2
    print(i)

# Program - The current population of a town is 10000. The population of the town is increasing at the rate of 10% per year. You have to write a program to find out the population at the end of each of the last 10 years.

curr_pop = 10000
for i in range(10,0,-1):
    print(i,curr_pop)
    curr_pop /= 1.1
    

# 2. While Loop
A while loop is used to repeatedly execute a block of code as long as a certain condition is true.


# Program to print 13 table

num = int(input('Enter the Number'))

i = 1

while i<11:
    print(num * i)
    i+=1

# 3. Loop Control Statements:
In addition to basic loops, Python provides loop control statements that allow you to customize loop behavior:

'break': Used to exit the loop prematurely based on a certain condition.
'continue': Skips the current iteration of the loop and proceeds to the next iteration.
'else' clause: Can be used with a for or while loop to specify a block of code that will be executed after the loop has finished normally (i.e., without hitting a break statement).

~ while loop with else
~ break and continue

x = 1

while x < 3:
    print(x)
    x += 1
    
else:
    print('Your limits are lower than thoughts')


numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

for num in numbers:
    if num == 8:
        break  # Exit the loop when num equals 8
    print(num)

print("Loop ended")

numbers = [1, 2, 3, 4, 5]

for num in numbers:
    if num == 3:
        continue  # Skip printing 3
    elif num == 5:
        break     # Exit the loop when 5 is encountered
    print(num)

print("Loop finished successfully")


